/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/conversion"
	"k8s.io/sample-apiserver/pkg/apis/kafee"
)

// Convert_v1alpha1_EspressoSpec_To_kafee_EspressoSpec is an autogenerated conversion function.
func Convert_v1alpha1_EspressoSpec_To_kafee_EspressoSpec(in *EspressoSpec, out *kafee.EspressoSpec, s conversion.Scope) error {
	if in.ReferenceType != nil {
		// assume that ReferenceType is defaulted
		switch *in.ReferenceType {
		case EspressoReferenceType:
			out.ReferenceType = kafee.EspressoReferenceType
			out.EspressoReference = in.Reference
		case CapuccinoReferenceType:
			out.ReferenceType = kafee.CapuccinoReferenceType
			out.CapuccinoReference = in.Reference
		}
	}

	return nil
}

// Convert_kafee_EspressoSpec_To_v1alpha1_EspressoSpec is an autogenerated conversion function.
func Convert_kafee_EspressoSpec_To_v1alpha1_EspressoSpec(in *kafee.EspressoSpec, out *EspressoSpec, s conversion.Scope) error {
	switch in.ReferenceType {
	case kafee.EspressoReferenceType:
		t := EspressoReferenceType
		out.ReferenceType = &t
		out.Reference = in.EspressoReference
	case kafee.CapuccinoReferenceType:
		t := CapuccinoReferenceType
		out.ReferenceType = &t
		out.Reference = in.CapuccinoReference
	}

	return nil
}
