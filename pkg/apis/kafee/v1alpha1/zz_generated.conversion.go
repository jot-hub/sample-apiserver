//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	kafee "k8s.io/sample-apiserver/pkg/apis/kafee"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Capuccino)(nil), (*kafee.Capuccino)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Capuccino_To_kafee_Capuccino(a.(*Capuccino), b.(*kafee.Capuccino), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kafee.Capuccino)(nil), (*Capuccino)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kafee_Capuccino_To_v1alpha1_Capuccino(a.(*kafee.Capuccino), b.(*Capuccino), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CapuccinoList)(nil), (*kafee.CapuccinoList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_CapuccinoList_To_kafee_CapuccinoList(a.(*CapuccinoList), b.(*kafee.CapuccinoList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kafee.CapuccinoList)(nil), (*CapuccinoList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kafee_CapuccinoList_To_v1alpha1_CapuccinoList(a.(*kafee.CapuccinoList), b.(*CapuccinoList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Espresso)(nil), (*kafee.Espresso)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Espresso_To_kafee_Espresso(a.(*Espresso), b.(*kafee.Espresso), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kafee.Espresso)(nil), (*Espresso)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kafee_Espresso_To_v1alpha1_Espresso(a.(*kafee.Espresso), b.(*Espresso), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EspressoList)(nil), (*kafee.EspressoList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EspressoList_To_kafee_EspressoList(a.(*EspressoList), b.(*kafee.EspressoList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kafee.EspressoList)(nil), (*EspressoList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kafee_EspressoList_To_v1alpha1_EspressoList(a.(*kafee.EspressoList), b.(*EspressoList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EspressoStatus)(nil), (*kafee.EspressoStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EspressoStatus_To_kafee_EspressoStatus(a.(*EspressoStatus), b.(*kafee.EspressoStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*kafee.EspressoStatus)(nil), (*EspressoStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kafee_EspressoStatus_To_v1alpha1_EspressoStatus(a.(*kafee.EspressoStatus), b.(*EspressoStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*kafee.EspressoSpec)(nil), (*EspressoSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_kafee_EspressoSpec_To_v1alpha1_EspressoSpec(a.(*kafee.EspressoSpec), b.(*EspressoSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*EspressoSpec)(nil), (*kafee.EspressoSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_EspressoSpec_To_kafee_EspressoSpec(a.(*EspressoSpec), b.(*kafee.EspressoSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Capuccino_To_kafee_Capuccino(in *Capuccino, out *kafee.Capuccino, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.DisallowedEspressos = *(*[]string)(unsafe.Pointer(&in.DisallowedEspressos))
	return nil
}

// Convert_v1alpha1_Capuccino_To_kafee_Capuccino is an autogenerated conversion function.
func Convert_v1alpha1_Capuccino_To_kafee_Capuccino(in *Capuccino, out *kafee.Capuccino, s conversion.Scope) error {
	return autoConvert_v1alpha1_Capuccino_To_kafee_Capuccino(in, out, s)
}

func autoConvert_kafee_Capuccino_To_v1alpha1_Capuccino(in *kafee.Capuccino, out *Capuccino, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.DisallowedEspressos = *(*[]string)(unsafe.Pointer(&in.DisallowedEspressos))
	return nil
}

// Convert_kafee_Capuccino_To_v1alpha1_Capuccino is an autogenerated conversion function.
func Convert_kafee_Capuccino_To_v1alpha1_Capuccino(in *kafee.Capuccino, out *Capuccino, s conversion.Scope) error {
	return autoConvert_kafee_Capuccino_To_v1alpha1_Capuccino(in, out, s)
}

func autoConvert_v1alpha1_CapuccinoList_To_kafee_CapuccinoList(in *CapuccinoList, out *kafee.CapuccinoList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]kafee.Capuccino)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_CapuccinoList_To_kafee_CapuccinoList is an autogenerated conversion function.
func Convert_v1alpha1_CapuccinoList_To_kafee_CapuccinoList(in *CapuccinoList, out *kafee.CapuccinoList, s conversion.Scope) error {
	return autoConvert_v1alpha1_CapuccinoList_To_kafee_CapuccinoList(in, out, s)
}

func autoConvert_kafee_CapuccinoList_To_v1alpha1_CapuccinoList(in *kafee.CapuccinoList, out *CapuccinoList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Capuccino)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_kafee_CapuccinoList_To_v1alpha1_CapuccinoList is an autogenerated conversion function.
func Convert_kafee_CapuccinoList_To_v1alpha1_CapuccinoList(in *kafee.CapuccinoList, out *CapuccinoList, s conversion.Scope) error {
	return autoConvert_kafee_CapuccinoList_To_v1alpha1_CapuccinoList(in, out, s)
}

func autoConvert_v1alpha1_Espresso_To_kafee_Espresso(in *Espresso, out *kafee.Espresso, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_EspressoSpec_To_kafee_EspressoSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_EspressoStatus_To_kafee_EspressoStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Espresso_To_kafee_Espresso is an autogenerated conversion function.
func Convert_v1alpha1_Espresso_To_kafee_Espresso(in *Espresso, out *kafee.Espresso, s conversion.Scope) error {
	return autoConvert_v1alpha1_Espresso_To_kafee_Espresso(in, out, s)
}

func autoConvert_kafee_Espresso_To_v1alpha1_Espresso(in *kafee.Espresso, out *Espresso, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_kafee_EspressoSpec_To_v1alpha1_EspressoSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_kafee_EspressoStatus_To_v1alpha1_EspressoStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_kafee_Espresso_To_v1alpha1_Espresso is an autogenerated conversion function.
func Convert_kafee_Espresso_To_v1alpha1_Espresso(in *kafee.Espresso, out *Espresso, s conversion.Scope) error {
	return autoConvert_kafee_Espresso_To_v1alpha1_Espresso(in, out, s)
}

func autoConvert_v1alpha1_EspressoList_To_kafee_EspressoList(in *EspressoList, out *kafee.EspressoList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]kafee.Espresso, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Espresso_To_kafee_Espresso(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_EspressoList_To_kafee_EspressoList is an autogenerated conversion function.
func Convert_v1alpha1_EspressoList_To_kafee_EspressoList(in *EspressoList, out *kafee.EspressoList, s conversion.Scope) error {
	return autoConvert_v1alpha1_EspressoList_To_kafee_EspressoList(in, out, s)
}

func autoConvert_kafee_EspressoList_To_v1alpha1_EspressoList(in *kafee.EspressoList, out *EspressoList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Espresso, len(*in))
		for i := range *in {
			if err := Convert_kafee_Espresso_To_v1alpha1_Espresso(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_kafee_EspressoList_To_v1alpha1_EspressoList is an autogenerated conversion function.
func Convert_kafee_EspressoList_To_v1alpha1_EspressoList(in *kafee.EspressoList, out *EspressoList, s conversion.Scope) error {
	return autoConvert_kafee_EspressoList_To_v1alpha1_EspressoList(in, out, s)
}

func autoConvert_v1alpha1_EspressoSpec_To_kafee_EspressoSpec(in *EspressoSpec, out *kafee.EspressoSpec, s conversion.Scope) error {
	// WARNING: in.Reference requires manual conversion: does not exist in peer-type
	// WARNING: in.ReferenceType requires manual conversion: inconvertible types (*k8s.io/sample-apiserver/pkg/apis/kafee/v1alpha1.ReferenceType vs k8s.io/sample-apiserver/pkg/apis/kafee.ReferenceType)
	return nil
}

func autoConvert_kafee_EspressoSpec_To_v1alpha1_EspressoSpec(in *kafee.EspressoSpec, out *EspressoSpec, s conversion.Scope) error {
	// WARNING: in.EspressoReference requires manual conversion: does not exist in peer-type
	// WARNING: in.CapuccinoReference requires manual conversion: does not exist in peer-type
	// WARNING: in.ReferenceType requires manual conversion: inconvertible types (k8s.io/sample-apiserver/pkg/apis/kafee.ReferenceType vs *k8s.io/sample-apiserver/pkg/apis/kafee/v1alpha1.ReferenceType)
	return nil
}

func autoConvert_v1alpha1_EspressoStatus_To_kafee_EspressoStatus(in *EspressoStatus, out *kafee.EspressoStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1alpha1_EspressoStatus_To_kafee_EspressoStatus is an autogenerated conversion function.
func Convert_v1alpha1_EspressoStatus_To_kafee_EspressoStatus(in *EspressoStatus, out *kafee.EspressoStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_EspressoStatus_To_kafee_EspressoStatus(in, out, s)
}

func autoConvert_kafee_EspressoStatus_To_v1alpha1_EspressoStatus(in *kafee.EspressoStatus, out *EspressoStatus, s conversion.Scope) error {
	return nil
}

// Convert_kafee_EspressoStatus_To_v1alpha1_EspressoStatus is an autogenerated conversion function.
func Convert_kafee_EspressoStatus_To_v1alpha1_EspressoStatus(in *kafee.EspressoStatus, out *EspressoStatus, s conversion.Scope) error {
	return autoConvert_kafee_EspressoStatus_To_v1alpha1_EspressoStatus(in, out, s)
}
